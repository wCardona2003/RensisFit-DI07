/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.rensis.rensisfit;

import com.rensis.data.DataAccess;
import com.rensis.models.Exercici;
import com.rensis.models.Usuari;
import com.rensis.models.Workout;
import com.rensis.styles.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;


/**
 *
 * @author Wilde
 * Clase para la creaci√≥n del panel de usuario
 */
public class UserPanel extends JPanel {

    private final ArrayList<JPanel> userListPanels = new ArrayList<>();
    private final MainScreen parentFrame;
    private final Usuari user;
    
    private ArrayList<JPanel> workoutsListPanels = new ArrayList<>();
    private ArrayList<JPanel> exerciseListPanels = new ArrayList<>();
    private JPanel lastClickedPanel = null;
    
    private Usuari selectedUser = null;
    private Workout selectedWorkout = null;
    private ArrayList<Exercici> selectedWorkoutExercises = new ArrayList<>();

    private ArrayList<Usuari> instructorUsers = null;

    /**
     * Creates a new UserPanel.
     * @param parent the parent frame
     * @param user the logged-in user
     */
    public UserPanel(MainScreen parent, Usuari user) {
        this.parentFrame = parent;
        this.user = user;

        // Ensure instructorUsers list is not null to prevent NullPointerException
        this.instructorUsers = DataAccess.getAllUsersByInstructor(user.getId());
        if (this.instructorUsers == null) {
            this.instructorUsers = new ArrayList<>();
        }

        initComponents();

        // Styling component borders
        applyUIStyles();

        // Setting user name in the header label
        if (user.getNom() != null) {
            userHeaderName.setText(user.getNom());
        } else {
            userHeaderName.setText("Unknown User");
        }

        addUserPanels();

        // Simulate clicking the first user in the list if available
        if (!userListPanels.isEmpty()) {
            userListPanels.get(0).dispatchEvent(
                    new MouseEvent(userListPanels.get(0), MouseEvent.MOUSE_CLICKED, System.currentTimeMillis(), 0, 0, 0, 1, false)
            );
        }
    }
    
        // Apply UI styles to components
    private void applyUIStyles() {
        headerPanel.setBorder(UIStyles.NO_BOTTOM_BORDER);
        logoutButton.setBorder(UIStyles.DEFAULT_BORDER_3PX);
        contentPanel.setBorder(UIStyles.DEFAULT_BORDER_2PX);

        usersListContainer.setBorder(UIStyles.DEFAULT_BORDER_2PX);
        usersListScrollpane.setBorder(UIStyles.NO_LEFT_RIGHT_BORDER);

        userInfoPanel.setBorder(UIStyles.NO_LEFT_RIGHT_BORDER);
        userInfoPhoto.setBorder(UIStyles.DEFAULT_BORDER_2PX);
        exerciseInfo.setBorder(UIStyles.DEFAULT_BORDER_2PX);
        workoutAddButton.setBorder(UIStyles.DEFAULT_BORDER_2PX_BUTTON);
        workoutEditButton.setBorder(UIStyles.DEFAULT_BORDER_2PX_BUTTON);
        workoutsListScrollpane.setBorder(UIStyles.DEFAULT_BORDER_2PX);

        exerciseInfoPhoto.setBorder(UIStyles.DEFAULT_BORDER_2PX);
        exerciseInfoDescriptionScrollpane.setBorder(UIStyles.DEFAULT_BORDER_2PX);
        exerciseEditButton.setBorder(UIStyles.DEFAULT_BORDER_2PX_BUTTON);
        exerciseRemoveButton.setBorder(UIStyles.DEFAULT_BORDER_2PX_BUTTON);
        exerciseListScrollpane.setBorder(UIStyles.DEFAULT_BORDER_2PX);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        headerPanel = new javax.swing.JPanel();
        headerHi = new javax.swing.JLabel();
        userHeaderName = new javax.swing.JLabel();
        headerLogo = new javax.swing.JLabel();
        logoutButton = new RoundedButton("");
        contentPanel = new javax.swing.JPanel();
        usersListContainer = new javax.swing.JPanel();
        usersListHead = new javax.swing.JLabel();
        usersListScrollpane = new javax.swing.JScrollPane();
        usersList = new javax.swing.JPanel();
        userInfoPanel = new javax.swing.JPanel();
        userInfoTitle = new javax.swing.JLabel();
        userInfoNameLabel = new javax.swing.JLabel();
        userInfoName = new javax.swing.JLabel();
        userInfoMailLabel = new javax.swing.JLabel();
        userInfoMail = new javax.swing.JLabel();
        userInfoPhoto = new javax.swing.JLabel();
        userInfoWorkoutsLabel = new javax.swing.JLabel();
        workoutsListScrollpane = new javax.swing.JScrollPane();
        workoutsList = new javax.swing.JPanel();
        workoutAddButton = new RoundedButton("");
        userInfoMailLabel1 = new javax.swing.JLabel();
        exerciseListScrollpane = new javax.swing.JScrollPane();
        exerciseList = new javax.swing.JPanel();
        userInfoMailLabel2 = new javax.swing.JLabel();
        workoutEditButton = new RoundedButton("");
        exerciseInfo = new javax.swing.JPanel();
        exerciseInfoPhoto = new javax.swing.JLabel();
        exerciseInfoHeadLabel = new javax.swing.JLabel();
        exerciseInfoWorkoutLabel = new javax.swing.JLabel();
        exerciseInfoWorkoutName = new javax.swing.JLabel();
        exerciseInfoWorkoutDescription = new javax.swing.JLabel();
        exerciseInfoDescriptionScrollpane = new javax.swing.JScrollPane();
        exerciseInfoDescription = new javax.swing.JTextArea();
        exerciseEditButton = new RoundedButton("");
        exerciseRemoveButton = new RoundedButton("");

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.GridBagLayout());

        headerPanel.setBackground(new java.awt.Color(103, 103, 103));
        headerPanel.setMaximumSize(new java.awt.Dimension(1280, 100));
        headerPanel.setMinimumSize(new java.awt.Dimension(1280, 100));

        headerHi.setFont(UIStyles.getFont(36));
        headerHi.setForeground(new java.awt.Color(255, 255, 255));
        headerHi.setText("Hi");

        userHeaderName.setFont(new java.awt.Font("Poppins Medium", 0, 36)); // NOI18N
        userHeaderName.setForeground(new java.awt.Color(254, 194, 209));

        headerLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/384x100-white.png"))); // NOI18N
        headerLogo.setToolTipText("");

        logoutButton.setBackground(new java.awt.Color(254, 194, 209));
        logoutButton.setFont(UIStyles.getFont(36));
        logoutButton.setForeground(new java.awt.Color(0, 0, 0));
        logoutButton.setText("Logout");
        logoutButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutButton.setFocusable(false);
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(headerHi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userHeaderName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 417, Short.MAX_VALUE)
                .addComponent(headerLogo)
                .addGap(227, 227, 227)
                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(headerLogo))
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(headerHi)
                            .addComponent(userHeaderName)))
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(headerPanel, new java.awt.GridBagConstraints());

        contentPanel.setBackground(new java.awt.Color(255, 255, 255));
        contentPanel.setMaximumSize(new java.awt.Dimension(1280, 620));
        contentPanel.setMinimumSize(new java.awt.Dimension(1280, 620));
        contentPanel.setLayout(new java.awt.GridBagLayout());

        usersListContainer.setBackground(new java.awt.Color(230, 230, 230));
        usersListContainer.setMaximumSize(new java.awt.Dimension(250, 620));
        usersListContainer.setMinimumSize(new java.awt.Dimension(250, 620));
        usersListContainer.setPreferredSize(new java.awt.Dimension(250, 620));

        usersListHead.setBackground(new java.awt.Color(0, 0, 0));
        usersListHead.setFont(UIStyles.getFont(24)
        );
        usersListHead.setForeground(new java.awt.Color(0, 0, 0));
        usersListHead.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        usersListHead.setText("Users");
        usersListHead.setToolTipText("");
        usersListHead.setAlignmentY(0.0F);
        usersListHead.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        usersListHead.setMaximumSize(new java.awt.Dimension(128, 55));
        usersListHead.setMinimumSize(new java.awt.Dimension(128, 55));
        usersListHead.setPreferredSize(new java.awt.Dimension(128, 55));

        usersListScrollpane.setHorizontalScrollBar(null);
        usersListScrollpane.setMaximumSize(new java.awt.Dimension(248, 32767));
        usersListScrollpane.setMinimumSize(new java.awt.Dimension(248, 539));
        usersListScrollpane.setPreferredSize(new java.awt.Dimension(248, 539));

        usersList.setBackground(new java.awt.Color(255, 255, 255));
        usersList.setMaximumSize(new java.awt.Dimension(248, 537));
        usersList.setMinimumSize(new java.awt.Dimension(248, 537));
        usersList.setLayout(new java.awt.GridLayout(instructorUsers.size() > 5 ? instructorUsers.size() : 5, 1, 1, 0));
        usersListScrollpane.setViewportView(usersList);

        javax.swing.GroupLayout usersListContainerLayout = new javax.swing.GroupLayout(usersListContainer);
        usersListContainer.setLayout(usersListContainerLayout);
        usersListContainerLayout.setHorizontalGroup(
            usersListContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, usersListContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(usersListHead, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(usersListScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        usersListContainerLayout.setVerticalGroup(
            usersListContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(usersListContainerLayout.createSequentialGroup()
                .addComponent(usersListHead, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usersListScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        contentPanel.add(usersListContainer, gridBagConstraints);

        userInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        userInfoPanel.setMaximumSize(new java.awt.Dimension(680, 620));
        userInfoPanel.setMinimumSize(new java.awt.Dimension(680, 620));

        userInfoTitle.setFont(UIStyles.getFont(48));
        userInfoTitle.setForeground(new java.awt.Color(0, 0, 0));
        userInfoTitle.setText("User");

        userInfoNameLabel.setFont(UIStyles.getFont(24));
        userInfoNameLabel.setForeground(new java.awt.Color(0, 0, 0));
        userInfoNameLabel.setText("Name:");

        userInfoName.setBackground(new java.awt.Color(0, 0, 0));
        userInfoName.setFont(UIStyles.getFont(24));
        userInfoName.setForeground(new java.awt.Color(0, 0, 0));
        userInfoName.setText("Wilderman Cardona");

        userInfoMailLabel.setFont(UIStyles.getFont(24));
        userInfoMailLabel.setForeground(new java.awt.Color(0, 0, 0));
        userInfoMailLabel.setText("Email:");

        userInfoMail.setFont(UIStyles.getFont(24));
        userInfoMail.setForeground(new java.awt.Color(0, 0, 0));
        userInfoMail.setText("wil.cardona.21@gmail.com");

        userInfoPhoto.setForeground(new java.awt.Color(0, 0, 0));
        userInfoPhoto.setText(" ");
        userInfoPhoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        userInfoWorkoutsLabel.setFont(UIStyles.getFont(48));
        userInfoWorkoutsLabel.setForeground(new java.awt.Color(0, 0, 0));
        userInfoWorkoutsLabel.setText("Workouts");

        workoutsListScrollpane.setForeground(new java.awt.Color(130, 130, 130));
        workoutsListScrollpane.setHorizontalScrollBar(null);
        workoutsListScrollpane.setMaximumSize(new java.awt.Dimension(315, 240));
        workoutsListScrollpane.setMinimumSize(new java.awt.Dimension(315, 240));
        workoutsListScrollpane.setPreferredSize(new java.awt.Dimension(315, 240));

        workoutsList.setBackground(new java.awt.Color(230, 230, 230));
        workoutsList.setMaximumSize(new java.awt.Dimension(315, 25000));
        workoutsList.setMinimumSize(new java.awt.Dimension(315, 240));
        workoutsList.setPreferredSize(new java.awt.Dimension(315, 400));
        workoutsList.setLayout(new java.awt.GridLayout(5, 1));
        workoutsListScrollpane.setViewportView(workoutsList);

        workoutAddButton.setBackground(new java.awt.Color(254, 194, 209));
        workoutAddButton.setFont(UIStyles.getFont(24));
        workoutAddButton.setForeground(new java.awt.Color(0, 0, 0));
        workoutAddButton.setText("Add");
        workoutAddButton.setBorder(null);
        workoutAddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        workoutAddButton.setFocusable(false);
        workoutAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workoutAddButtonActionPerformed(evt);
            }
        });

        userInfoMailLabel1.setFont(UIStyles.getFont(24));
        userInfoMailLabel1.setForeground(new java.awt.Color(0, 0, 0));
        userInfoMailLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        userInfoMailLabel1.setText("Workouts");

        exerciseListScrollpane.setForeground(new java.awt.Color(130, 130, 130));
        exerciseListScrollpane.setHorizontalScrollBar(null);
        exerciseListScrollpane.setMaximumSize(new java.awt.Dimension(315, 240));
        exerciseListScrollpane.setMinimumSize(new java.awt.Dimension(315, 240));
        exerciseListScrollpane.setPreferredSize(new java.awt.Dimension(315, 240));

        exerciseList.setBackground(new java.awt.Color(230, 230, 230));
        exerciseList.setMaximumSize(new java.awt.Dimension(315, 25000));
        exerciseList.setMinimumSize(new java.awt.Dimension(315, 240));
        exerciseList.setPreferredSize(new java.awt.Dimension(315, 400));
        exerciseList.setLayout(new java.awt.GridLayout(5, 1));
        exerciseListScrollpane.setViewportView(exerciseList);

        userInfoMailLabel2.setFont(UIStyles.getFont(24));
        userInfoMailLabel2.setForeground(new java.awt.Color(0, 0, 0));
        userInfoMailLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userInfoMailLabel2.setText("Excercises");

        workoutEditButton.setBackground(new java.awt.Color(254, 194, 209));
        workoutEditButton.setFont(UIStyles.getFont(24));
        workoutEditButton.setForeground(new java.awt.Color(0, 0, 0));
        workoutEditButton.setText("Edit");
        workoutEditButton.setBorder(null);
        workoutEditButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        workoutEditButton.setFocusable(false);
        workoutEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workoutEditButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout userInfoPanelLayout = new javax.swing.GroupLayout(userInfoPanel);
        userInfoPanel.setLayout(userInfoPanelLayout);
        userInfoPanelLayout.setHorizontalGroup(
            userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(userInfoPanelLayout.createSequentialGroup()
                        .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userInfoTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(userInfoPanelLayout.createSequentialGroup()
                                .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userInfoNameLabel)
                                    .addComponent(userInfoMailLabel))
                                .addGap(18, 18, 18)
                                .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(userInfoMail)
                                    .addComponent(userInfoName))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(userInfoPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(userInfoPanelLayout.createSequentialGroup()
                        .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(userInfoWorkoutsLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(workoutsListScrollpane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, userInfoPanelLayout.createSequentialGroup()
                                .addComponent(userInfoMailLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(workoutEditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(workoutAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exerciseListScrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userInfoMailLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        userInfoPanelLayout.setVerticalGroup(
            userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userInfoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userInfoPanelLayout.createSequentialGroup()
                        .addComponent(userInfoTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userInfoNameLabel)
                            .addComponent(userInfoName))
                        .addGap(29, 29, 29)
                        .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userInfoMailLabel)
                            .addComponent(userInfoMail))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userInfoPanelLayout.createSequentialGroup()
                        .addComponent(userInfoPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(userInfoWorkoutsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userInfoMailLabel1)
                    .addComponent(userInfoMailLabel2)
                    .addComponent(workoutAddButton)
                    .addComponent(workoutEditButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(userInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exerciseListScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(workoutsListScrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 119, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        contentPanel.add(userInfoPanel, gridBagConstraints);

        exerciseInfo.setBackground(new java.awt.Color(255, 255, 255));
        exerciseInfo.setMaximumSize(new java.awt.Dimension(349, 620));
        exerciseInfo.setMinimumSize(new java.awt.Dimension(350, 620));

        exerciseInfoPhoto.setText(" ");
        exerciseInfoPhoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        exerciseInfoHeadLabel.setFont(UIStyles.getFont(30));
        exerciseInfoHeadLabel.setForeground(new java.awt.Color(0, 0, 0));
        exerciseInfoHeadLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exerciseInfoHeadLabel.setText("Excercise Details");

        exerciseInfoWorkoutLabel.setFont(UIStyles.getFont(24));
        exerciseInfoWorkoutLabel.setForeground(new java.awt.Color(0, 0, 0));
        exerciseInfoWorkoutLabel.setText("Excercise:");

        exerciseInfoWorkoutName.setFont(UIStyles.getFont(24));
        exerciseInfoWorkoutName.setForeground(new java.awt.Color(0, 0, 0));
        exerciseInfoWorkoutName.setText("Exercici 1");

        exerciseInfoWorkoutDescription.setFont(UIStyles.getFont(24));
        exerciseInfoWorkoutDescription.setForeground(new java.awt.Color(0, 0, 0));
        exerciseInfoWorkoutDescription.setText("DESCRIPTION:");

        exerciseInfoDescriptionScrollpane.setHorizontalScrollBar(null);
        exerciseInfoDescriptionScrollpane.setMaximumSize(new java.awt.Dimension(311, 189));
        exerciseInfoDescriptionScrollpane.setMinimumSize(new java.awt.Dimension(311, 189));
        exerciseInfoDescriptionScrollpane.setPreferredSize(new java.awt.Dimension(311, 189));

        exerciseInfoDescription.setBackground(new java.awt.Color(230, 230, 230));
        exerciseInfoDescription.setColumns(20);
        exerciseInfoDescription.setFont(UIStyles.getFont(20));
        exerciseInfoDescription.setForeground(new java.awt.Color(0, 0, 0));
        exerciseInfoDescription.setLineWrap(true);
        exerciseInfoDescription.setRows(5);
        exerciseInfoDescription.setText("Zancadas...");
        exerciseInfoDescription.setMaximumSize(new java.awt.Dimension(311, 189));
        exerciseInfoDescription.setMinimumSize(new java.awt.Dimension(311, 189));
        exerciseInfoDescriptionScrollpane.setViewportView(exerciseInfoDescription);

        exerciseEditButton.setBackground(new java.awt.Color(254, 194, 209));
        exerciseEditButton.setFont(UIStyles.getFont(24));
        exerciseEditButton.setForeground(new java.awt.Color(0, 0, 0));
        exerciseEditButton.setText("Edit");
        exerciseEditButton.setBorder(null);
        exerciseEditButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exerciseEditButton.setFocusable(false);
        exerciseEditButton.setMaximumSize(new java.awt.Dimension(79, 44));
        exerciseEditButton.setMinimumSize(new java.awt.Dimension(79, 44));
        exerciseEditButton.setPreferredSize(new java.awt.Dimension(79, 44));

        exerciseRemoveButton.setBackground(new java.awt.Color(254, 194, 209));
        exerciseRemoveButton.setFont(UIStyles.getFont(24));
        exerciseRemoveButton.setForeground(new java.awt.Color(0, 0, 0));
        exerciseRemoveButton.setText("Remove");
        exerciseRemoveButton.setBorder(null);
        exerciseRemoveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exerciseRemoveButton.setFocusable(false);
        exerciseRemoveButton.setMaximumSize(new java.awt.Dimension(79, 44));
        exerciseRemoveButton.setMinimumSize(new java.awt.Dimension(79, 44));
        exerciseRemoveButton.setPreferredSize(new java.awt.Dimension(79, 44));

        javax.swing.GroupLayout exerciseInfoLayout = new javax.swing.GroupLayout(exerciseInfo);
        exerciseInfo.setLayout(exerciseInfoLayout);
        exerciseInfoLayout.setHorizontalGroup(
            exerciseInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exerciseInfoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(exerciseInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exerciseInfoPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(exerciseInfoHeadLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(exerciseInfoLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(exerciseInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(exerciseInfoWorkoutDescription)
                    .addComponent(exerciseInfoWorkoutLabel)
                    .addGroup(exerciseInfoLayout.createSequentialGroup()
                        .addComponent(exerciseEditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exerciseRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(exerciseInfoDescriptionScrollpane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(exerciseInfoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(exerciseInfoWorkoutName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        exerciseInfoLayout.setVerticalGroup(
            exerciseInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exerciseInfoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(exerciseInfoHeadLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exerciseInfoPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exerciseInfoWorkoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exerciseInfoWorkoutName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(exerciseInfoWorkoutDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exerciseInfoDescriptionScrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(exerciseInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(exerciseInfoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(exerciseEditButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(exerciseInfoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exerciseRemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(184, 184, 184))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        contentPanel.add(exerciseInfo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(contentPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    
    // Method to add an item to a list (User, Workout, Exercise)
   private void addItemToList(boolean last, Object item, JPanel listPanel, ArrayList<JPanel> listPanels, int width, int height) {
       if (item == null || listPanel == null || listPanels == null) {
           return; // Prevent adding null elements
       }

       // Creating JPanel
       JPanel itemPanel = new JPanel();
       itemPanel.setPreferredSize(new Dimension(width, height));
       itemPanel.setBackground(Color.WHITE);
       itemPanel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
       itemPanel.setLayout(new BorderLayout());

       // Apply border correctly
       if (item instanceof Usuari) {
           itemPanel.setBorder(last ? UIStyles.BOTTOM_RIGHT_BORDER : UIStyles.BOTTOM_RIGHT_BORDER);
       } else {
           itemPanel.setBorder(last ? UIStyles.BOTTOM_RIGHT_BORDER : UIStyles.BOTTOM_BORDER);
       }

       // Creating label
       JLabel label;
       if (item instanceof Usuari) {
           label = new JLabel(((Usuari) item).getNom(), SwingConstants.CENTER);
       } else if (item instanceof Workout) {
           label = new JLabel(((Workout) item).getComments(), SwingConstants.CENTER);
       } else if (item instanceof Exercici) {
           label = new JLabel(((Exercici) item).getNomExercici(), SwingConstants.CENTER);
       } else {
           return; // Invalid object type
       }

       label.setForeground(Color.BLACK);
       label.setFont(UIStyles.getFont(24));

       // Adding MouseListener to catch the mouse actions
       itemPanel.addMouseListener(new MouseAdapter() {
           @Override
           public void mouseClicked(MouseEvent e) {
               resetPanelColors(listPanels);

               // If clicked, change styles
               itemPanel.setBackground(new Color(103, 103, 103));
               if (itemPanel.getComponentCount() > 0) {
                   itemPanel.getComponent(0).setForeground(Color.WHITE);
               }

               // Handle different item types
               if (item instanceof Usuari) {
                   lastClickedPanel = itemPanel;
                   selectedUser = (Usuari) item;
                   resetInfo("all");
                   updateUserInfo(selectedUser);
                   addWorkoutsPanels(selectedUser);
               } else if (item instanceof Workout) {
                   selectedWorkout = (Workout) item;
                   resetInfo("");
                   addExercisePanels(selectedWorkout);
                   hideExercisesInfo();
               } else if (item instanceof Exercici) {
                   updateExerciseInfo((Exercici) item);
                   showExercisesInfo(); // Ensure the panel is shown
               }
           }
       });

       itemPanel.add(label, BorderLayout.CENTER);
       listPanel.add(itemPanel);
       listPanels.add(itemPanel);

       listPanel.revalidate();
       listPanel.repaint();
   }
    
    // Method to add user panels and select the first one
    private void addUserPanels() {
        int last = instructorUsers.size() - 1;
        int i = 0;

        for (Usuari user : instructorUsers) {
            if (user != null) {
                addItemToList(i == last, user, usersList, userListPanels, 248, 70);
            }
            i++;
        }

        // Automatically select the first user in the list
        if (!userListPanels.isEmpty()) {
            userListPanels.get(0).dispatchEvent(new MouseEvent(userListPanels.get(0),
                    MouseEvent.MOUSE_CLICKED, System.currentTimeMillis(), 0, 0, 0, 1, false));
        }
    }
    
    // Method to add exercises and select the first one
    private void addExercisePanels(Workout workout) {
        ArrayList<Exercici> workoutExercises = DataAccess.getExercicisPerWorkout(workout);

        if (workoutExercises == null || workoutExercises.isEmpty()) {
            return;
        }

        exerciseListPanels.clear(); // Clear previous panels to avoid duplicates
        exerciseList.removeAll(); 
        exerciseList.revalidate();
        exerciseList.repaint();

        int i = 0;
        for (Exercici exercici : workoutExercises) {
            addItemToList(i == workoutExercises.size() - 1, exercici, exerciseList, exerciseListPanels, 315, 90);
            i++;
        }

        // Automatically select the first exercise in the list
        if (!workoutExercises.isEmpty() && !exerciseListPanels.isEmpty()) {
            Exercici firstExercise = workoutExercises.get(0);
            updateExerciseInfo(firstExercise); // Update exercise info directly
            showExercisesInfo(); // Ensure the panel is visible
        }
    }
    
    // Method to add workouts and select the first one
    private void addWorkoutsPanels(Usuari user) {
        ArrayList<Workout> userWorkouts = DataAccess.getWorkoutsPerUser(user);

        if (userWorkouts == null || userWorkouts.isEmpty()) {
            resetInfo("all");
            return;
        }

        int i = 0;
        for (Workout workout : userWorkouts) {
            addItemToList(i == userWorkouts.size() - 1, workout, workoutsList, workoutsListPanels, 315, 90);
            i++;
        }

        // Automatically select the first workout in the list
        if (!workoutsListPanels.isEmpty()) {
            workoutsListPanels.get(0).dispatchEvent(new MouseEvent(workoutsListPanels.get(0),
                    MouseEvent.MOUSE_CLICKED, System.currentTimeMillis(), 0, 0, 0, 1, false));
        }
    }
   
    // Method to reset panel colors
    private void resetPanelColors(ArrayList<JPanel> panels) {
        if (panels == null) return;

        for (JPanel panel : panels) {
            panel.setBackground(Color.WHITE);
            if (panel.getComponentCount() > 0) {
                panel.getComponent(0).setForeground(Color.BLACK);
            }
        }
        workoutsList.revalidate();
        workoutsList.repaint();
        exerciseList.revalidate();
        exerciseList.repaint();
    }

    // Method to reset users list panel colors
    private void resetInfo(String option) {
        if (option.equals("all")) {
            workoutsList.removeAll();
            workoutsList.revalidate();
            workoutsList.repaint();
            workoutsListPanels = new ArrayList<>();
        }
        exerciseList.removeAll();
        exerciseList.revalidate();
        exerciseList.repaint();
        exerciseListPanels = new ArrayList<>();
        
    }
    
    // Method to update user information
    private void updateUserInfo(Usuari user) {
        if (user == null) return;

        userInfoName.setText(user.getNom() != null ? user.getNom() : "Unknown");
        userInfoTitle.setText(user.getNom() != null ? user.getNom() : "Unknown");
        userInfoMail.setText(user.getEmail() != null ? user.getEmail() : "No email provided");
    }

    
    // Method to update exercise information
    private void updateExerciseInfo(Exercici exercise) {
        if (exercise == null) return;

        exerciseInfoWorkoutName.setText(exercise.getNomExercici() != null ? exercise.getNomExercici() : "Unknown Exercise");
        exerciseInfoDescription.setText(exercise.getDescripcio() != null ? exercise.getDescripcio() : "No description available");
    }
    
    // Method to hide exercises info
    private void hideExercisesInfo() {
        if (exerciseInfo != null) {
            for (Component c : exerciseInfo.getComponents()) {
                c.setVisible(false);
            }
        }
    }
    
    // Method to show exercise info after selection
    private void showExercisesInfo() {
        if (exerciseInfo != null) {
            for (Component c : exerciseInfo.getComponents()) {
                c.setVisible(true);
            }
        }
    }
    
    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // Hide panel
        setVisible(false);

        // Call logout handler
        if (parentFrame != null) {
            parentFrame.logoutHandler();
        }
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void workoutEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workoutEditButtonActionPerformed
        // TODO add your handling code here:
        WorkoutEditForm removeForm = new WorkoutEditForm(parentFrame,true,selectedUser,selectedWorkout);
        removeForm.setLocationRelativeTo(parentFrame);
        removeForm.setVisible(true);
        lastClickedPanel.dispatchEvent(new MouseEvent(workoutsListPanels.get(0), MouseEvent.MOUSE_CLICKED,System.currentTimeMillis(), 0, 0, 0, 1, false));
    }//GEN-LAST:event_workoutEditButtonActionPerformed

    private void workoutAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workoutAddButtonActionPerformed
        // TODO add your handling code here:
        WorkoutEditForm removeForm = new WorkoutEditForm(parentFrame,true,selectedUser);
        removeForm.setLocationRelativeTo(parentFrame);
        removeForm.setVisible(true);
        lastClickedPanel.dispatchEvent(new MouseEvent(workoutsListPanels.get(0), MouseEvent.MOUSE_CLICKED,System.currentTimeMillis(), 0, 0, 0, 1, false));
    }//GEN-LAST:event_workoutAddButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentPanel;
    private javax.swing.JButton exerciseEditButton;
    private javax.swing.JPanel exerciseInfo;
    private javax.swing.JTextArea exerciseInfoDescription;
    private javax.swing.JScrollPane exerciseInfoDescriptionScrollpane;
    private javax.swing.JLabel exerciseInfoHeadLabel;
    private javax.swing.JLabel exerciseInfoPhoto;
    private javax.swing.JLabel exerciseInfoWorkoutDescription;
    private javax.swing.JLabel exerciseInfoWorkoutLabel;
    private javax.swing.JLabel exerciseInfoWorkoutName;
    private javax.swing.JPanel exerciseList;
    private javax.swing.JScrollPane exerciseListScrollpane;
    private javax.swing.JButton exerciseRemoveButton;
    private javax.swing.JLabel headerHi;
    private javax.swing.JLabel headerLogo;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel userHeaderName;
    private javax.swing.JLabel userInfoMail;
    private javax.swing.JLabel userInfoMailLabel;
    private javax.swing.JLabel userInfoMailLabel1;
    private javax.swing.JLabel userInfoMailLabel2;
    private javax.swing.JLabel userInfoName;
    private javax.swing.JLabel userInfoNameLabel;
    private javax.swing.JPanel userInfoPanel;
    private javax.swing.JLabel userInfoPhoto;
    private javax.swing.JLabel userInfoTitle;
    private javax.swing.JLabel userInfoWorkoutsLabel;
    private javax.swing.JPanel usersList;
    private javax.swing.JPanel usersListContainer;
    private javax.swing.JLabel usersListHead;
    private javax.swing.JScrollPane usersListScrollpane;
    private javax.swing.JButton workoutAddButton;
    private javax.swing.JButton workoutEditButton;
    private javax.swing.JPanel workoutsList;
    private javax.swing.JScrollPane workoutsListScrollpane;
    // End of variables declaration//GEN-END:variables
}
